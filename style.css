/**
  Нормализация блочной модели
 */
 *,
 ::before,
 ::after {
   box-sizing: border-box;
 }
 
 /**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
 :where(ul, ol):where([class]) {
   padding-left: 0;
 }
 
 /**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
 body,
 :where(blockquote, figure):where([class]) {
   margin: 0;
 }
 
 /**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
 :where(
   h1,
   h2,
   h3,
   h4,
   h5,
   h6,
   p,
   ul,
   ol,
   dl
 ):where([class]) {
   margin-block: 0;
 }
 
 :where(dd[class]) {
   margin-left: 0;
 }
 
 :where(fieldset[class]) {
   margin-left: 0;
   padding: 0;
   border: none;
 }
 
 /**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
 :where(ul[class]) {
   list-style: none;
 }
 
 :where(address[class]) {
   font-style: normal;
 }
 
 /**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
 p {
   --paragraphMarginBottom: 24px;
 
   margin-block: 0;
 }
 
 /**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
 p:where(:not([class]):not(:last-child)) {
   margin-bottom: var(--paragraphMarginBottom);
 }
 
 
 /**
   Упрощаем работу с изображениями
  */
 img {
   display: block;
   max-width: 100%;
 }
 
 /**
   Наследуем свойства шрифт для полей ввода
  */
 input,
 textarea,
 select,
 button {
   font: inherit;
 }
 
 html {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   height: 100%;
 }
 
 /**
   Плавный скролл
  */
 html,
 :has(:target) {
   scroll-behavior: smooth;
 }
 
 body {
   /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
   min-height: 100%;
   /**
     Унифицированный интерлиньяж
    */
   line-height: 1.5;
 }
 
 /**
   Приводим к единому цвету svg-элементы
  */
 svg *[fill] { fill: currentColor }
 svg *[stroke] { stroke: currentColor }
 
 /**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
 svg * {
   transition-property: fill, stroke;
 }
 
 /**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
 @media (prefers-reduced-motion: reduce) {
   *,
   ::before,
   ::after {
     animation-duration: 0.01ms !important;
     animation-iteration-count: 1 !important;
     transition-duration: 0.01ms !important;
     scroll-behavior: auto !important;
   }
 }







body {
  font-family: Arial, sans-serif;
  line-height: 1.5;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f4f4f4;
}

.slider-background {
  width: 80%;
  max-width: 64rem; /* 1024px = 64rem */
  background-color: #2a292d;
  display: flex;
  justify-content: center;
  align-items: center;
}

.slider-container {
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.slides {
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.slide {
  width: 100%;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.slide img {
  width: 56.25rem; /* 900px = 56.25rem */
  height: 31.25rem; /* 500px = 31.25rem */
  max-width: 56.25rem;
  border-radius: 0.625rem; /* 10px = 0.625rem */
}


#slide1:checked ~ .slides {
  transform: translateX(0);
}

#slide2:checked ~ .slides {
  transform: translateX(-100%);
}

#slide3:checked ~ .slides {
  transform: translateX(-200%);
}

#slide4:checked ~ .slides {
  transform: translateX(-300%);
}


.control-panel {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 0.625rem; /* 10px = 0.625rem */
}


.captions {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  flex-grow: 1;
  padding-left: 3.75rem; /* 60px = 3.75rem */
}


.caption {
  opacity: 0;
  position: absolute;
  transition: opacity 0.5s ease-in-out;
  font-size: 0.9375rem; /* 15px = 0.9375rem */
  color: #fff;
  text-align: left;
  left: 3.75rem; /* 60px = 3.75rem */
  top: 0;
  width: 100%;
}

.captions {
  position: relative;
  min-height: 1.875rem; /* 30px = 1.875rem */
}

#slide1:checked ~ .control-panel .captions .caption[data-caption="slide1"],
#slide2:checked ~ .control-panel .captions .caption[data-caption="slide2"],
#slide3:checked ~ .control-panel .captions .caption[data-caption="slide3"],
#slide4:checked ~ .control-panel .captions .caption[data-caption="slide4"] {
  opacity: 1;
  position: absolute;
}


.navigation {
  display: flex;
  gap: 0.625rem; /* 10px = 0.625rem */
  padding-right: 3.75rem; /* 60px = 3.75rem */
}

/* Make the control buttons smaller */
.nav-control {
  width: 0.625rem;  /* 10px = 0.625rem */
  height: 0.625rem;
  background-color: rgba(212, 193, 193, 0.555);
  border-radius: 50%;
  cursor: pointer;
  position: relative;
  z-index: 1;
}


.nav-control::before {
  content: '';
  position: absolute;
  top: -0.625rem; /* 10px = 0.625rem */
  left: -0.625rem;
  right: -0.625rem;
  bottom: -0.625rem;
  z-index: -1;
}

.nav-control:hover {
  background-color: rgba(107, 237, 226, 0.7);
}


input[type="radio"]:checked + .nav-control {
  background-color: rgba(0, 0, 0, 0.9);
}
input[type="radio"] {
  display: none;
}


@media (max-width: 500px) { 
  .slider-background {
    width: 100%;
  }

  .slide img {
    max-height: 12.5rem; /* 200px = 12.5rem */
  }

  .caption {
    font-size: 0.875rem; /* 14px = 0.875rem */
  }
}
